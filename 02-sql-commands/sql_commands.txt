Use the commands we have learned about to complete the following tasks and submit the SQL statements 
in the submission tab. Real world examples must be distinct from those used in the text.

1. List the commands for adding, updating, and deleting data

Adding Data:

INSERT INTO [table] (value1, value2, value3) VALUES 
(1, ‘Some sort of data’, ‘Another example’),
(2, ‘Even more data’, ‘Yet another example’);

Updating Data:

UPDATE [table] SET value2 = ’99’ WHERE id = 1;

Deleting Data:

DELETE FROM [table] WHERE id = 99;

2. Explain the structure for each type of command.

Add: The add command begins with the INSERT INTO keywords followed by the table name. If inserting multiple 
items/rows of data at one time, it is then followed by the column names in parentheses we are inserting data 
into. Then the keyword VALUES followed by the actual values in parentheses and separated by commas for each item. 
If only inserting one row, you can simply remove the column names in parentheses before the VALUES portion of the query.

Update: The update command begins with the UPDATE keyword followed by the table name. Next is the SET keyword 
which determines the new value being updated & in which column, this could be more than one. Finally, there is 
a WHERE keyword which determines which of the existing data the SET will happen to, searched for by column 
(or columns if you use an AND statement to select multiple conditions in your WHERE query).

Delete: The delete command begins with the DELETE FROM keywords followed by the table name. This is followed 
by a WHERE keyword to direct the query to which item of data is to be removed. This WHERE statement can also have 
multiple conditions to satisfy in a DELETE query. 

3. What are some the data types that can be used in tables? Give a real world example of each.

Integer - This could be used for storing any whole number, perhaps a userid or age.
Money - This could be used for storing the cost of a product in an inventory.
Boolean - This could be used to store a value to display whether someone is a ‘Premium’ user or not.
Date - This could be used to store the date for when a user signed up for a website.
Varchar/text - This could be used to store any variable-length string, such as a movie title in a movies table.


4. Think through how to create a new table to hold a list of people invited to a wedding. This table needs to 
have first and last name, whether they sent in their RSVP, the number of guests they are bringing, and the number 
of meals (1 for adults and 1/2 for children).

- Which data type would you use to store each of the following pieces of information?
First and last name. - varchar/text - variable-length string
Whether they sent in their RSVP. - Boolean - a simple true/false
Number of guests. - Integer/smallint
Number of meals. - Numeric - Allowing for the fact that we may have some 0.5 meals to track for children, we can’t use integer.

Write a command that makes the table to track the wedding.

CREATE TABLE wedding (
  firstname text,
  lastname text,
  rsvp boolean,
  numberofguests integer,
  numberofmeals numeric(4, 1)
);

Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.

ALTER TABLE wedding ADD COLUMN thankyoucard boolean SET DEFAULT false;

You have decided to move the data about the meals to another table, so write a command to remove the column storing 
the number meals from the wedding table.

ALTER TABLE wedding DROP COLUMN numberofmeals;

The guests are going to need a place to sit at the reception, so write a command that adds a column for table number.

ALTER TABLE wedding ADD COLUMN tablenumber integer;

The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from the database.

DROP TABLE wedding;


5. Write a command to make a new table to hold the books in a library with the columns ISBN, title, author, genre, 
publishing date, number of copies, and available copies.

CREATE TABLE books (
  isbn text,
  title text,
  author text,
  genre text,
  publishingdate date,
  numberofcopies integer,
  availablecopies integer
);

- Find three books and add their information to the table.

INSERT INTO books (isbn, title, author, genre, publishingdate, numberofcopies, availablecopies)
VALUES
(‘978-0679805274’, ‘Oh, the Places You’ll Go!’, ‘Dr. Seuss’, ‘Children’, 01-22-1990, 50, 30),
(‘978-0394800134’, ‘One Fish Two Fish Red Fish Blue Fish’, ‘Dr. Seuss’, ‘Children’, 03-12-1960, 10, 5),
(‘978-0679882824’, ‘Mr Brown can Moo! Can you?’, ‘Dr. Seuss’, ‘Children’, 11-26-1996, 20, 5);


- Someone has just checked out one of the books. Change the available copies column to 1 fewer.

UPDATE books SET availablecopies = 4 WHERE isbn = ‘978-0394800134’;

- Now one of the books has been added to the banned books list. Remove it from the table.

DELETE FROM books WHERE isbn = ‘978-0679805274’;


6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, 
country of origin, a brief description of the mission, orbiting body, if it is currently operating, and approximate miles 
from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts (
  id integer,
  name text,
  yearlaunched numeric(4, 0)
  origincountry text,
  missiondescription text,
  orbitingbody text,
  currentlyoperating boolean,
  approxmilesfromearth integer
);

- Add 3 non-Earth-orbiting satellites to the table.

INSERT INTO spacecrafts (id, name, yearlaunched, origincountry, missiondescription, orbitingbody, currentlyoperating, approxmilesfromearth)
VALUES
(1, ‘Big Spacecraft’, 1960, ‘USA’, ‘To do stuff in space’, ‘Mars’, TRUE, 7500000),
(2, ‘Huge Spaceship’, 1970, ‘Russia’, ‘To find Aliens’, ‘Venus’, FALSE, 0),
(3, ‘Massive Spacecraft’, 1990, ‘UK’, ‘Take pictures of Earth’, ‘Uranus’, TRUE, 999999); 

- Remove one of the satellites from the table since it has just been crashed into the planet.

DELETE FROM spacecrafts WHERE id = 2;

- Edit another satellite because it is no longer operating and change the value to reflect that.

UPDATE spacecrafts SET currentlyoperating = false WHERE id = 1;


7. Write a command to make a new table to hold the emails in your inbox. This table should include an id, the subject 
line, the sender, any additional recipients, the body of the email, the timestamp, whether or not it’s been read, and 
the id of the email chain it’s in. Also provide commands that perform the following operations:

CREATE TABLE emails (
  id integer,
  subject text,
  sender text,
  additionalrecipients text,
  body text,
  timestamp timestamp,
  read boolean,
  originalemail integer
);

- Add 3 new emails to the inbox.

INSERT INTO emails (id, subject, sender, additionalrecipients, body, timestamp, read, originalemail)
VALUES
(1, ‘Meow Meow’, ‘theo@meowmeow.com’, ‘ilovefood@gimmemore.com’, ‘Please give me more food!’, TIMESTAMP '2018-04-20 21:05:00’, TRUE, 55),
(2, ‘Stop begging’, ‘richarddeane@thatsme.com’, ‘ilovefood@gimmemore.com’, ‘Stop begging for food!’, TIMESTAMP '2018-04-20 22:30:00’, TRUE, 50),
(3, ‘Never stop.’, ‘theo@meowmeow.com’, ‘ilovefood@gimmemore.com’, ‘I’ll never stop begging…’, TIMESTAMP '2018-04-21 16:30:00’, FALSE, 50);

- You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM emails WHERE id = 1 AND sender = 'theo@meowmeow.com';

- You started reading an email but just heard a crash in another room. Mark the email as unread before investigating, so you can come back to it later.

UPDATE emails SET read = FALSE WHERE id = 3 AND sender = 'theo@meowmeow.com';





